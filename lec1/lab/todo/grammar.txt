// 词法

// 注释不生成词元，直接跳过
(skip) 注释 = '#' (~'\n')*
// 空格不生成词元，直接跳过
(skip) 空白字符 = ' ' | '\r' | '\n' | '\t'

字母 = 'a' | 'b' | ... | 'z' | 'A' | 'B' | ... | 'Z'
数字 = '0' | '1' | ... | '9'

名字 = 字母 (字母 | 数字)*
数 = 数字+ ('.' 数字+)?

// 语法

模块 = (函数声明 | 变量赋值语句)*

函数 = 'function' 名字 '(' (形参 (',' 形参)* )? ')' '{' 语句* '}'

语句 = 语句块 | if语句 | while语句 | break语句
    | continue语句 | 表达式求值语句 | return语句

语句块 = '{' 语句* '}'
if语句 = 'if' '(' 条件 ')' 语句 ('else' 语句)?
while语句 = 'while' '(' 条件 ')' 语句
break语句 = 'break' ';'
continue语句 = 'continue' ';'
表达式求值语句 = 表达式 ';'
return语句 = 'return' 表达式? ';'
for语句 = 'for' '(' 表达式? ';' 表达式? ';' 表达式? ')' 语句

表达式 = 赋值表达式 | 二元运算表达式 | 一元运算表达式
    | 调用表达式 | 变量 | 数字常量 | 括起来的表达式
赋值表达式 = 变量 '=' 表达式
二元运算符 = '+' | '-' | '*' | '/' | '=='
    | '!=' | '<=' | '<' | '>=' | '>'
二元运算表达式 = 表达式 二元运算符 表达式
一元运算符 = '+' | '-' | '!'
一元运算表达式 = 一元运算符 表达式
调用表达式 = 函数名 '(' (表达式 (',' 表达式)*)? ')'
变量 = 名字
数字常量 = 数
括起来的表达式 = '(' 表达式 ')'

// 消除左递归、处理优先级后
表达式 = 赋值表达式
赋值表达式 = 变量 '=' 赋值表达式 | 比较表达式
比较表达式 = 加减表达式 (('==' | '!=' | '<='
    | '<' | '>' | '>=') 比较表达式)?
加减表达式 = 乘除表达式 (('+' | '-') 加减表达式)?
乘除表达式 = 一元运算表达式 (('*' | '/') 乘除表达式)?
一元运算表达式 = ('+' | '-' | '!') 一元运算表达式 | 原子表达式
// 原子 指不可分割出一个运算符出去
原子表达式 = 变量 | 数字常量 | 括起来的表达式 | 调用表达式
